# --------------------------------------------------- #
# https://github.com/habx/devops-template-circleci    #
# ----------- DO NOT EDIT BELOW THIS LINE ----------- #
# --------------------------------------------------- #
version: 2.1

# --- Anchor alias ---- #
# - Docker configuration - #
alias:
  # https://circleci.com/docs/2.0/circleci-images/#nodejs
  - &docker_node12_configuration
    docker:
      - image: circleci/node:12.0.0
        user: root
  - &docker_buildpack_deps_configuration
    docker:
      - image: circleci/buildpack-deps:stretch
        user: root
  - &docker_buildpack_deps_python_configuration
    docker:
      - image: circleci/python
        user: root
  # - Jobs filters - #
  - &filters_ignore_tags
    tags:
      ignore: /.*/
  - &filters_ignore_branches
    branches:
      ignore: /.*/
  - &filters_allow_tags
    tags:
      only: /^v.*/
  - &filters_allow_branch_dev
    branches:
      only:
        - dev
  # - Step - #
  - &preconfig
    run:
      name: Preconfigure environment ~/.npmrc
      command: |
        echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
  # - Node modules - #
  - &install_node_modules_with_cache
    node/with-cache:
      dir: node_modules
      cache-version: dev{{ .Environment.CACHE_VERSION }}
      steps:
        - run:
            name: Install node module
            command: npm install
  - &install_node_modules_with_cache_production
    node/with-cache:
      dir: node_modules
      cache-version: prod{{ .Environment.CACHE_VERSION }}
      steps:
        - run:
            name: Install node module production
            command: npm install --production
  - &fetch_node_modules_with_cache_production
    node/with-cache:
      dir: node_modules
      cache-version: prod{{ .Environment.CACHE_VERSION }}
      steps:
        - run: echo
jobs:
  build:
    <<: *docker_node12_configuration
    steps:
      - checkout
      - *preconfig
      - *install_node_modules_with_cache_production
      - *install_node_modules_with_cache
      - run: export NODE_ENV=production; npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - dist

  storybook-build:
    <<: *docker_node12_configuration
    steps:
      - checkout
      - *preconfig
      - *install_node_modules_with_cache
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_node_modules_with_cache
      - run: npm run storybook:build

  lint:
    <<: *docker_node12_configuration
    steps:
      - checkout
      - *preconfig
      - *install_node_modules_with_cache
      - run: npm run lint

  tests:
    <<: *docker_node12_configuration
    steps:
      - checkout
      - *preconfig
      - *install_node_modules_with_cache
      - run: npm run test
  tests-puppeteer:
    docker:
      - image: jean9696/drone-puppeteer
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_node_modules_with_cache
      - run:
          name: Puppeteer test
          command: |
            apt-get -yq update
            apt-get -y install nginx
            sed -i 's/root.*/root \/root\/project\/build-test\/;/' /etc/nginx/sites-enabled/default
            nginx -c /etc/nginx/nginx.conf
            chmod -R a+rx /root/
            npm run test
    environment:
      HABX_ROLE: admin
      LOCAL_URL: http://localhost

  npm-publish:
    <<: *docker_node12_configuration
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_node_modules_with_cache
      - run: NPM_TOKEN=${NPM_TOKEN_RW} npm publish

  storybook-publish:
    <<: *docker_node12_configuration
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - *preconfig
      - *install_node_modules_with_cache
      - run: npm run storybook:deploy

orbs:
  node: circleci/node@1.0.1
# --- END --- #
# --------------------------------------------------- #
# -------------- DEFINE YOUR WORKFLOW --------------- #
# --------------------------------------------------- #
workflows:
  build:
    jobs:
      - build:
          context: default_env_vars
          filters:
            <<: *filters_allow_tags
      - lint:
          context: default_env_vars
          filters:
            <<: *filters_allow_tags
      - npm-publish:
          context: default_env_vars
          requires:
            - build
            - lint
          filters:
            <<: *filters_allow_tags
            <<: *filters_ignore_branches
